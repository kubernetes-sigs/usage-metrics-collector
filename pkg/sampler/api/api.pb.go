// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: pkg/sampler/api/api.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc_health_v1 "google.golang.org/grpc/health/grpc_health_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMetricsRequest) Reset() {
	*x = ListMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsRequest) ProtoMessage() {}

func (x *ListMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{0}
}

type ListMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*ContainerMetrics    `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	Node       *NodeMetrics           `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	NodeName   string                 `protobuf:"bytes,3,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	PodName    string                 `protobuf:"bytes,4,opt,name=podName,proto3" json:"podName,omitempty"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Reason     string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListMetricsResponse) GetContainers() []*ContainerMetrics {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ListMetricsResponse) GetNode() *NodeMetrics {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ListMetricsResponse) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ListMetricsResponse) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ListMetricsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ListMetricsResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ContainerMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerID                string    `protobuf:"bytes,1,opt,name=containerID,proto3" json:"containerID,omitempty"`
	PodUID                     string    `protobuf:"bytes,2,opt,name=podUID,proto3" json:"podUID,omitempty"`
	CpuCoresNanoSec            []int64   `protobuf:"varint,3,rep,packed,name=cpuCoresNanoSec,proto3" json:"cpuCoresNanoSec,omitempty"`
	MemoryBytes                []int64   `protobuf:"varint,4,rep,packed,name=memoryBytes,proto3" json:"memoryBytes,omitempty"`
	OomCount                   []int64   `protobuf:"varint,5,rep,packed,name=oomCount,proto3" json:"oomCount,omitempty"`
	OomKillCount               []int64   `protobuf:"varint,6,rep,packed,name=oomKillCount,proto3" json:"oomKillCount,omitempty"`
	CpuThrottledNanoSec        []int64   `protobuf:"varint,7,rep,packed,name=cpuThrottledNanoSec,proto3" json:"cpuThrottledNanoSec,omitempty"`
	CpuPercentPeriodsThrottled []float32 `protobuf:"fixed32,8,rep,packed,name=cpuPercentPeriodsThrottled,proto3" json:"cpuPercentPeriodsThrottled,omitempty"`
	NodeName                   string    `protobuf:"bytes,9,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
}

func (x *ContainerMetrics) Reset() {
	*x = ContainerMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetrics) ProtoMessage() {}

func (x *ContainerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetrics.ProtoReflect.Descriptor instead.
func (*ContainerMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{2}
}

func (x *ContainerMetrics) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *ContainerMetrics) GetPodUID() string {
	if x != nil {
		return x.PodUID
	}
	return ""
}

func (x *ContainerMetrics) GetCpuCoresNanoSec() []int64 {
	if x != nil {
		return x.CpuCoresNanoSec
	}
	return nil
}

func (x *ContainerMetrics) GetMemoryBytes() []int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return nil
}

func (x *ContainerMetrics) GetOomCount() []int64 {
	if x != nil {
		return x.OomCount
	}
	return nil
}

func (x *ContainerMetrics) GetOomKillCount() []int64 {
	if x != nil {
		return x.OomKillCount
	}
	return nil
}

func (x *ContainerMetrics) GetCpuThrottledNanoSec() []int64 {
	if x != nil {
		return x.CpuThrottledNanoSec
	}
	return nil
}

func (x *ContainerMetrics) GetCpuPercentPeriodsThrottled() []float32 {
	if x != nil {
		return x.CpuPercentPeriodsThrottled
	}
	return nil
}

func (x *ContainerMetrics) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type NodeMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregatedMetrics []*NodeAggregatedMetrics `protobuf:"bytes,1,rep,name=aggregatedMetrics,proto3" json:"aggregatedMetrics,omitempty"`
}

func (x *NodeMetrics) Reset() {
	*x = NodeMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetrics) ProtoMessage() {}

func (x *NodeMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetrics.ProtoReflect.Descriptor instead.
func (*NodeMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{3}
}

func (x *NodeMetrics) GetAggregatedMetrics() []*NodeAggregatedMetrics {
	if x != nil {
		return x.AggregatedMetrics
	}
	return nil
}

type NodeAggregatedMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggregationLevel string  `protobuf:"bytes,1,opt,name=aggregationLevel,proto3" json:"aggregationLevel,omitempty"`
	CpuCoresNanoSec  []int64 `protobuf:"varint,2,rep,packed,name=cpuCoresNanoSec,proto3" json:"cpuCoresNanoSec,omitempty"`
	MemoryBytes      []int64 `protobuf:"varint,3,rep,packed,name=memoryBytes,proto3" json:"memoryBytes,omitempty"`
}

func (x *NodeAggregatedMetrics) Reset() {
	*x = NodeAggregatedMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAggregatedMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAggregatedMetrics) ProtoMessage() {}

func (x *NodeAggregatedMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAggregatedMetrics.ProtoReflect.Descriptor instead.
func (*NodeAggregatedMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{4}
}

func (x *NodeAggregatedMetrics) GetAggregationLevel() string {
	if x != nil {
		return x.AggregationLevel
	}
	return ""
}

func (x *NodeAggregatedMetrics) GetCpuCoresNanoSec() []int64 {
	if x != nil {
		return x.CpuCoresNanoSec
	}
	return nil
}

func (x *NodeAggregatedMetrics) GetMemoryBytes() []int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return nil
}

type ConfigurePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigurePush) Reset() {
	*x = ConfigurePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_sampler_api_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurePush) ProtoMessage() {}

func (x *ConfigurePush) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sampler_api_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurePush.ProtoReflect.Descriptor instead.
func (*ConfigurePush) Descriptor() ([]byte, []int) {
	return file_pkg_sampler_api_api_proto_rawDescGZIP(), []int{5}
}

var File_pkg_sampler_api_api_proto protoreflect.FileDescriptor

var file_pkg_sampler_api_api_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xe6, 0x02,
	0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x55, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x64, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x65, 0x63, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x4e,
	0x61, 0x6e, 0x6f, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6f, 0x6d, 0x4b, 0x69, 0x6c, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x6f, 0x6d, 0x4b,
	0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x70, 0x75, 0x54,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x65, 0x63, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x13, 0x63, 0x70, 0x75, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74,
	0x6c, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x65, 0x63, 0x12, 0x3e, 0x0a, 0x1a, 0x63, 0x70,
	0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x54,
	0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x02, 0x52, 0x1a,
	0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x73, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x53, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x4e, 0x61, 0x6e, 0x6f,
	0x53, 0x65, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x70, 0x75, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x0f, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x75, 0x73, 0x68, 0x32, 0x76, 0x0a,
	0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x6b, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x32, 0xdb, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x65, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12, 0x6a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x73, 0x2d, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x32, 0x6b, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1d, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x75, 0x73, 0x68, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pkg_sampler_api_api_proto_rawDescOnce sync.Once
	file_pkg_sampler_api_api_proto_rawDescData = file_pkg_sampler_api_api_proto_rawDesc
)

func file_pkg_sampler_api_api_proto_rawDescGZIP() []byte {
	file_pkg_sampler_api_api_proto_rawDescOnce.Do(func() {
		file_pkg_sampler_api_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_sampler_api_api_proto_rawDescData)
	})
	return file_pkg_sampler_api_api_proto_rawDescData
}

var file_pkg_sampler_api_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_sampler_api_api_proto_goTypes = []interface{}{
	(*ListMetricsRequest)(nil),                 // 0: containerd.api.ListMetricsRequest
	(*ListMetricsResponse)(nil),                // 1: containerd.api.ListMetricsResponse
	(*ContainerMetrics)(nil),                   // 2: containerd.api.ContainerMetrics
	(*NodeMetrics)(nil),                        // 3: containerd.api.NodeMetrics
	(*NodeAggregatedMetrics)(nil),              // 4: containerd.api.NodeAggregatedMetrics
	(*ConfigurePush)(nil),                      // 5: containerd.api.ConfigurePush
	(*timestamppb.Timestamp)(nil),              // 6: google.protobuf.Timestamp
	(*grpc_health_v1.HealthCheckRequest)(nil),  // 7: grpc.health.v1.HealthCheckRequest
	(*grpc_health_v1.HealthCheckResponse)(nil), // 8: grpc.health.v1.HealthCheckResponse
}
var file_pkg_sampler_api_api_proto_depIdxs = []int32{
	2, // 0: containerd.api.ListMetricsResponse.containers:type_name -> containerd.api.ContainerMetrics
	3, // 1: containerd.api.ListMetricsResponse.node:type_name -> containerd.api.NodeMetrics
	6, // 2: containerd.api.ListMetricsResponse.timestamp:type_name -> google.protobuf.Timestamp
	4, // 3: containerd.api.NodeMetrics.aggregatedMetrics:type_name -> containerd.api.NodeAggregatedMetrics
	0, // 4: containerd.api.Metrics.ListMetrics:input_type -> containerd.api.ListMetricsRequest
	7, // 5: containerd.api.Health.Check:input_type -> grpc.health.v1.HealthCheckRequest
	7, // 6: containerd.api.Health.IsLeader:input_type -> grpc.health.v1.HealthCheckRequest
	1, // 7: containerd.api.MetricsCollector.PushMetrics:input_type -> containerd.api.ListMetricsResponse
	1, // 8: containerd.api.Metrics.ListMetrics:output_type -> containerd.api.ListMetricsResponse
	8, // 9: containerd.api.Health.Check:output_type -> grpc.health.v1.HealthCheckResponse
	8, // 10: containerd.api.Health.IsLeader:output_type -> grpc.health.v1.HealthCheckResponse
	5, // 11: containerd.api.MetricsCollector.PushMetrics:output_type -> containerd.api.ConfigurePush
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_sampler_api_api_proto_init() }
func file_pkg_sampler_api_api_proto_init() {
	if File_pkg_sampler_api_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_sampler_api_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sampler_api_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sampler_api_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sampler_api_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sampler_api_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAggregatedMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_sampler_api_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_sampler_api_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_pkg_sampler_api_api_proto_goTypes,
		DependencyIndexes: file_pkg_sampler_api_api_proto_depIdxs,
		MessageInfos:      file_pkg_sampler_api_api_proto_msgTypes,
	}.Build()
	File_pkg_sampler_api_api_proto = out.File
	file_pkg_sampler_api_api_proto_rawDesc = nil
	file_pkg_sampler_api_api_proto_goTypes = nil
	file_pkg_sampler_api_api_proto_depIdxs = nil
}
