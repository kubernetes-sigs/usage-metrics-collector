# Aggregate requets_allocated and limits_allocated metrics
# by summing at the workload, app, namespace and cluster
# levels.
prefix: "kube_usage" # apply this name prefix to metrics
resources: # export metrics for these resources
  "cpu": "cpu_cores"
  "memory": "memory_bytes"
preComputeMetrics:
  enabled: true
extensions:
  namespaceLabels:
  - name: ns_annotation
    annotation: n-a
  - name: ns_label
    label: n-l
  nodeLabels:
  - name: node_annotation
    annotation: nd-a
  - name: node_label
    label: nd-l
  - name: node_pool
    annotation: "nodes/pool"
cgroupMetrics:
  sources:
    "/": {name: "root_utilization"}
    "/kubepods": {name: "kubepods_utilization"}
    "/system.slice": {name: "system_utilization"}
  rootSource: {name: "utilization"}
aggregations: # aggregate metrics and export them
- sources: # use these sources (see the API documentation for sources)
    type: "cgroup" # use container source
    cgroup:
    - "utilization"
    - "root_utilization"
    - "kubepods_utilization"
    - "system_utilization"
  levels:
  - mask:
      name: "node" # sum all containers / pods into workload metrics
      builtIn:
        exported_node: true
        cgroup: true
      extensions:
        node_label: true
        node_annotation: true
    operation: "hist"
    histogramBuckets:
      cpu_cores: [0.0000011, 0.0000021, 0.0000031, 0.0000041, 0.0000051]
      memory_bytes: [50, 100, 200, 400, 800, 1600]
    noExport: true
    retentionName: "usage_0"
- sources: # use these sources (see the API documentation for sources)
    type: "container" # use container source
    container:
    - "requests_allocated"
    - "limits_allocated"
    - "utilization"
  levels:
  - mask:
      name: "container" # base level -- no aggregations
      builtIn:
        exported_container: true
        exported_pod: true
        exported_namespace: true
        exported_node: true
        workload_name: true
        workload_kind: true
        workload_api_group: true
        workload_api_version: true
        app: true
        priority_class: true
        scheduled: true
    operation: avg
    retentionName: "usage_1"
  - mask:
      name: "workload" # sum all containers / pods into workload metrics
      builtIn:
        exported_namespace: true
        workload_name: true
        workload_kind: true
        workload_api_group: true
        workload_api_version: true
        app: true
        priority_class: true
    retentionName: "usage_1"
  - mask:
      name: "app" # sum all workloads into app metrics
      builtIn:
        exported_namespace: true
        app: true
        priority_class: true
    retentionName: "usage_1"
  - mask:
      name: "namespace" # sum all apps into namespace metrics
      builtIn:
        exported_namespace: true
        priority_class: true
    retentionName: "usage_2"
  - mask:
      name: "cluster" # sum all namespaces into cluster metrics
      builtIn:
        priority_class: true
    retentionName: "usage_2"
saveSamplesLocally: {}